image: mcr.microsoft.com/playwright:v1.44.0-jammy


definitions:
  caches:
    npm: ~/.npm


  yaml-anchors: # nobody cares what you call this, but note anchors are not necessarily steps

    - &setup-script >-
        npm ci
        && npx playwright --version
        && ls -la
        && ls -la /root/.npm/_logs
        && npx playwright install --with-deps
        && npx playwright --version
        && npm install @currents/playwright@latest
        && npm list
        && mv tests/SPECS tests/product_configuration/ 
        && ls -A tests/product_configuration/SPECS  


    # also, the "step:" prefixes are dropped by the YAML anchor
    # and obviated by bitbucket-pipelines-the-application


  specgroup_variables: &variable-list   # I M P O R T A N T --> NEVER include specgroup "NONE" into this list" !!
    - "*"
    - CUSTOM
    - doppelrollo
    - fliegengitter
    - gutschein
    - holzjalousie
    - insektenschutzrollo
    - jalousie
    - kissenhuelle_einzel
    - kissenhuelle_set
    - muster
    - neg_doppelrollo
    - neg_fliegengitter
    - neg_holzjalousie
    - neg_insektenschutzrollo
    - neg_jalousie
    - neg_paypal
    - neg_plissee_cosiflor
    - neg_raffrollo
    - neg_rollo
    - neg_schiebegardine
    - neg_vatid
    - neg_vorhang
    - paypal
    - plissee_cosiflor
    - rabattcode
    - raffrollo
    - rollo
    - schiebegardine
    - serviceprodukt
    - special_test
    - user
    - vat_id
    - vorhang
    - zubehoer_plissee
    - zubehoer_rollo
    - zubehoer_schiebegardinen
    - zubehoer_vorhang
 

  multiple_specgroup-variables: &multiple-variable-list  # I M P O R T A N T --> NEVER include specgroup "CUSTOM and "*" into this list" !!
    - doppelrollo
    - fliegengitter
    - gutschein
    - holzjalousie
    - insektenschutzrollo
    - jalousie
    - kissenhuelle_einzel
    - kissenhuelle_set
    - muster
    - neg_doppelrollo
    - neg_fliegengitter
    - neg_holzjalousie
    - neg_insektenschutzrollo
    - neg_jalousie
    - neg_paypal
    - neg_plissee_cosiflor
    - neg_raffrollo
    - neg_rollo
    - neg_schiebegardine
    - neg_vatid
    - neg_vorhang
    - paypal
    - plissee_cosiflor
    - rabattcode
    - raffrollo
    - rollo
    - schiebegardine
    - serviceprodukt
    - special_test
    - user
    - vat_id
    - vorhang
    - zubehoer_plissee
    - zubehoer_rollo
    - zubehoer_schiebegardinen
    - zubehoer_vorhang
    - NONE 


  steps: 


  # job definition for generating current speclist
    - step: &generate-speclist
        name: update speclist
        max-time: 5
        script: 
          - echo "Committing new specfiles"
          - bash list-specfiles.sh tests/product_configuration 
          - git add tests/product_configuration/*
          # Use [skip ci] when you are pushing back to your repository. This will stop pipelines triggering on the new commit and avoid an eternal loop!
          - git commit -m "Auto-generate speclists [skip ci]"
          - git push
        condition:
          changesets:
            includePaths:
              - "tests/product_configuration/*/*"

   

    # job definition for handling chosen specgroups
    - step: &assign-specfiles
        name: handle chosen specgroups
        image: alpine:latest  # use lightweight alpine linux image to accelarate step
        max-time: 5
        script:
          - echo $TERM
          - export TERM=xterm
          - echo $TERM
          - mkdir tests/SPECS
          - ls -l
          - cat custom-speclist.txt
          - >- 
            if [ "$SPECGROUP" != "NONE" ] && [ "$SPECGROUP" != "CUSTOM" ] ; then
               if [ "$SPECGROUP" != "*" ]; then
                  cp -r tests/product_configuration/"$SPECGROUP"/* tests/SPECS
                  countspecs=$(ls tests/SPECS | grep spec.js | wc -l)
                  echo "Total specfiles: $countspecs"
               else 
                 while read line; do
                   cp -r tests/product_configuration/"$line"/* tests/SPECS
                   done < <(ls tests/product_configuration)
                   countspecs=$(ls tests/SPECS | grep spec.js | wc -l)
                   echo "Total specfiles: $countspecs"
               fi
            fi
          - >-
            if [ "$SPECGROUP" = "CUSTOM" ] ; then 
               while read -r line; do 
                 echo "$line"
                 cp "$line" tests/SPECS
                done  < custom-speclist.txt
               countspecs=$(ls tests/SPECS | grep spec.js | wc -l)
               echo "Total specfiles: $countspecs"
            fi
          - >-
            if [ "$SPECGROUP_2" != "NONE" ] && [ "$SPECGROUP_2" != "CUSTOM" ] && [ "$SPECGROUP_2" != "$SPECGROUP" ] && [ "$SPECGROUP" != "*" ] && [ "$SPECGROUP_2" != "*" ] ; then 
               cp -r tests/product_configuration/"$SPECGROUP_2"/. tests/SPECS
               countspecs=$(ls tests/SPECS | grep spec.js | wc -l)
               echo "Total specfiles: $countspecs"
            fi 
          - >-
            if [ "$SPECGROUP_3" != "NONE" ] && [ "$SPECGROUP_3" != "CUSTOM" ] && [ "$SPECGROUP_3" != "$SPECGROUP" ] && [ "$SPECGROUP_3" != "$SPECGROUP_2" ] && [ "$SPECGROUP" != "*" ] && [ "$SPECGROUP_3" != "*" ] ; then 
               cp -r tests/product_configuration/"$SPECGROUP_3"/. tests/SPECS
               countspecs=$(ls tests/SPECS | grep spec.js | wc -l)
               echo "Total specfiles: $countspecs"
            fi 
          - ls -A tests/SPECS/*.js
        artifacts: # defining the artifacts to be passed to each future step.
          - tests/SPECS/**      


  # job definition for running spec tests on production  
    - step: &run-specs-production-no-order
        name: 'LIV playwright tests - production no order'
        max-time: 90
        script: 
          - *setup-script
           # we do not run sepa tests on production due geolocation issues
          - rm -f tests/product_configuration/SPECS/configure_rollo_sepa.spec.js
           # we do not run paypal tests on production - no (real) testaccount available
          - rm -f tests/product_configuration/SPECS/configure_cosiflorplissee_paypalexpress.spec.js
          # - Run the test cases 
          - BASE_URL=https://www.....de PLACE_ORDER=false npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag production_no_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on stage without order 
    - step: &run-specs-stage-no-order
        name: 'LIV playwright tests - stage no order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://stage.....de PLACE_ORDER=false JS_FILES_ZUBEHOER=/js/delphinus/product-pages/zubehoerprodukt/zubehoerprodukt.js JS_FILES_SERVICE=/js/delphinus/product-pages/serviceprodukt.js npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag stage_no_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on stage with order  
    - step: &run-specs-stage-with-order
        name: 'LIV playwright tests - stage with order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://stage.....de PLACE_ORDER=true JS_FILES_ZUBEHOER=/js/delphinus/product-pages/zubehoerprodukt/zubehoerprodukt.js JS_FILES_SERVICE=/js/delphinus/product-pages/serviceprodukt.js npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag stage_with_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on livhakan without order
    - step: &run-specs-livhakan-no-order
        name: 'LIV playwright tests - livhakan no order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://....de/ PLACE_ORDER=false npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag livhakan_no_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on livhakan with order
    - step: &run-specs-livhakan-with-order
        name: 'LIV playwright tests - livhakan with order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://....de/ PLACE_ORDER=true npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag livhakan_with_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on ....de without order
    - step: &run-specs-liv-no-order
        name: 'LIV playwright tests - ....de no order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://....de/ PLACE_ORDER=false npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag ....de_no_order
        artifacts:
          - playwright-report/index.html


  # job definition for running spec tests on ....de with order
    - step: &run-specs-liv-with-order
        name: 'LIV playwright tests - ....de with order'
        max-time: 120
        script: 
          - *setup-script
          # - Run the test cases 
          - BASE_URL=https://....de/ PLACE_ORDER=true npx pwc ./tests/product_configuration/SPECS/* --project chromium --ci-build-id $BITBUCKET_BUILD_NUMBER --key .... --project-id yEWn4m --shard=$(($BITBUCKET_PARALLEL_STEP+1))/$BITBUCKET_PARALLEL_STEP_COUNT --tag ....de_with_order
        artifacts:
          - playwright-report/index.html


pipelines:
  default:
    - step: *generate-speclist

  custom: # Pipelines that are triggered manually
    PRODUCTION-no-order: # The name that is displayed in the list in the Bitbucket 
      - variables:
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list  
      - step: *assign-specfiles           
      - parallel:
    # run 20 steps in parallel 
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order
         - step: *run-specs-production-no-order


    STAGE-no-order: # The name that is displayed in the list in the Bitbucket  
      - variables:
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list  
      - step: *assign-specfiles
      - parallel:
    # run 20 steps in parallel 
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order          
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 
         - step: *run-specs-stage-no-order 


    STAGE-with-order: # The name that is displayed in the list in the Bitbucket  
      - variables:
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list  
      - step: *assign-specfiles
      - parallel:
    # run 20 steps in parallel 
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
         - step: *run-specs-stage-with-order          
    

    livhakan-NO-order:
      - variables:
          - name: TESTBRANCH
            default: ""
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list    
          - name: IMPORT_MINIDUMP
            default: "nein"
            allowed-values: 
              - "nein"
              - "ja"              
      - step: *assign-specfiles           
      - step:
          name: prepare testing environment
          max-time: 10
          script:
            - if [ -z "$TESTBRANCH" ] ; then TESTBRANCH="CURRENT" ; fi          
            - echo "Es wird OHNE Bestellabgabe auf ....de gegen $TESTBRANCH getestet."
            - pipe: atlassian/ssh-run:0.7.1
              variables:
                SSH_USER: 'delphinu'
                SERVER: 'delphinus-test.de'
                MODE: 'command'
                COMMAND: './minidump_liv/04_scripts/expect.sh livhakan $TESTBRANCH $IMPORT_MINIDUMP'
          after-script:
            - echo $BITBUCKET_EXIT_CODE
      - parallel:
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order
          - step: *run-specs-livhakan-no-order



    livhakan-with-order:
      - variables:
          - name: TESTBRANCH
            default: ""
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list    
          - name: IMPORT_MINIDUMP
            default: "nein"
            allowed-values: 
              - "nein"
              - "ja"          
      - step: *assign-specfiles              
      - step:
          name: prepare testing environment
          max-time: 10
          script:
             - if [ -z "$TESTBRANCH" ] ; then TESTBRANCH="CURRENT" ; fi
             - echo "Es wird MIT Bestellabgabe auf ....de gegen $TESTBRANCH getestet."
             - pipe: atlassian/ssh-run:0.7.1
               variables:
                 SSH_USER: 'delphinu'
                 SERVER: 'delphinus-test.de'
                 MODE: 'command'
                 COMMAND: './minidump_liv/04_scripts/expect.sh livhakan $TESTBRANCH $IMPORT_MINIDUMP'
          after-script:
            - echo $BITBUCKET_EXIT_CODE
      - parallel:
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order
          - step: *run-specs-livhakan-with-order

       

    liv.delphinus-NO-order:
      - variables:
          - name: TESTBRANCH
            default: ""
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list    
          - name: IMPORT_MINIDUMP
            default: "nein"
            allowed-values: 
              - "nein"
              - "ja"              
      - step: *assign-specfiles        
      - step:
          name: prepare testing environment
          max-time: 10
          script:
            - if [ -z "$TESTBRANCH" ] ; then TESTBRANCH="CURRENT" ; fi          
            - echo "Es wird OHNE Bestellabgabe auf ....de gegen $TESTBRANCH getestet."
            - pipe: atlassian/ssh-run:0.7.1
              variables:
                SSH_USER: 'delphinu'
                SERVER: 'delphinus-test.de'
                MODE: 'command'
                COMMAND: './minidump_liv/04_scripts/expect.sh liv $TESTBRANCH $IMPORT_MINIDUMP'
          after-script:
            - echo $BITBUCKET_EXIT_CODE
      - parallel:
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order
          - step: *run-specs-liv-no-order



    liv.delphinus-with-order:
      - variables:
          - name: TESTBRANCH
            default: ""
          - name: SPECGROUP
            default: "*"
            allowed-values: *variable-list
          - name: SPECGROUP_2
            default: "NONE"
            allowed-values: *multiple-variable-list     
          - name: SPECGROUP_3
            default: "NONE"
            allowed-values: *multiple-variable-list    
          - name: IMPORT_MINIDUMP
            default: "nein"
            allowed-values: 
              - "nein"
              - "ja"          
      - step: *assign-specfiles             
      - step:
          name: prepare testing environment
          max-time: 10
          script:
             - if [ -z "$TESTBRANCH" ] ; then TESTBRANCH="CURRENT" ; fi
             - echo "Die Specgruppe $SPECGROUP wird MIT Bestellabgabe auf ....de gegen $TESTBRANCH getestet."
             - pipe: atlassian/ssh-run:0.7.1
               variables:
                 SSH_USER: 'delphinu'
                 SERVER: 'delphinus-test.de'
                 MODE: 'command'
                 COMMAND: './minidump_liv/04_scripts/expect.sh liv $TESTBRANCH $IMPORT_MINIDUMP'
          after-script:
            - echo $BITBUCKET_EXIT_CODE
      - parallel:
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
          - step: *run-specs-liv-with-order
